using System.IO.Pipes;
using System.Runtime.CompilerServices;

public struct Numbers
{
    public int number1;
    public int number2;
}
class PipeClient
{
    static void Main(string[] args)
    {
        using (NamedPipeClientStream pipeClient = new NamedPipeClientStream(".", "cspipe", PipeDirection.InOut))
        {   
            Console.Write("Attempting to connect to pipe...");
            pipeClient.Connect();
            Console.WriteLine("Connected to pipe.");
            try
            {
                while (true)
                {
                    int number3;
                    byte[] bytes = new byte[Unsafe.SizeOf<Numbers>()];
                    pipeClient.Read(bytes, 0, bytes.Length);
                    Numbers receivedData = Unsafe.As<byte, Numbers>(ref bytes[0]);
                    Console.WriteLine("Number 1: " + receivedData.number1);
                    Console.WriteLine("Number 2: " + receivedData.number2);
                    number3 = receivedData.number1 * 2 + receivedData.number2;
                    Console.WriteLine("Number 1 *2 + Number 2: " + number3);
                    byte[] modifiedBytes = new byte[Unsafe.SizeOf<Numbers>()];
                    Unsafe.As<byte, Numbers>(ref modifiedBytes[0]) = receivedData;
                    pipeClient.Write(modifiedBytes, 0, modifiedBytes.Length);
                }
            }
            catch (Exception) { }
        }
        Console.Write("Press Enter to continue...");
        Console.ReadLine();
    }
}
